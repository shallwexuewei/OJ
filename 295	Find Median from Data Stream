import java.util.ArrayList;

class MedianFinder {
	ArrayList<Integer> arrList = new ArrayList<Integer>();

	// Adds a number into the data structure.
	public void addNum(int num) {
		int len = arrList.size();
		if (len == 0) {
			arrList.add(num);
		} else {
			int start = 0;
			int end = len - 1;
			boolean isPut = false;
			while (start <= end) {
				int mid = (start + end) / 2;
				if (num > arrList.get(mid)) {
					start = mid + 1;
				} else if (num < arrList.get(mid)) {
					end = mid - 1;
				} else {
					arrList.add(mid, num);
					isPut = true;
					break;
				}
			}
			if (!isPut) {
				// remember to judge end > -1, or will fail in the test case 2
				if (end > -1) {
					if (num < arrList.get(end)) {
						arrList.add(end, num);
					} else if (start < len) {
						// remember to judge start < len, or will fail in the test case 1
						if (num < arrList.get(start)) {
							arrList.add(start, num);
						} else {
							arrList.add(start + 1, num);
						}
					} else {
						arrList.add(num);
					}
				} else {
					arrList.add(0, num);
				}
			}
		}
	}

	// Returns the median of current data stream
	public double findMedian() {
		int len = arrList.size();
		int mid = len / 2;
		if (len % 2 == 0) {
			return ((double) arrList.get(mid - 1) + arrList.get(mid)) / 2;
		} else {
			return arrList.get(mid);
		}
	}

	// Your MedianFinder object will be instantiated and called as such:
	// MedianFinder mf = new MedianFinder();
	// mf.addNum(1);
	// mf.findMedian();

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		// MedianFinder mf = new MedianFinder();
		// mf.addNum(2);
		// System.out.println(mf.findMedian());
		// mf.addNum(3);
		// System.out.println(mf.findMedian());

		MedianFinder mf = new MedianFinder();
		mf.addNum(-1);
		System.out.println(mf.findMedian());
		mf.addNum(-2);
		System.out.println(mf.findMedian());
		mf.addNum(-3);
		System.out.println(mf.findMedian());
		mf.addNum(-4);
		System.out.println(mf.findMedian());
		mf.addNum(-5);
		System.out.println(mf.findMedian());
	}

}

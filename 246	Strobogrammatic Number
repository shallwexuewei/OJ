public class Solution {
    public boolean isStrobogrammatic(String num) {
        /*
        9 6
        8 8 
        6 9
        5 5
        1 1
        0 0
        */
        int[] map = new int[10];
        Arrays.fill(map, -1);
        map[9] = 6;
        map[8] = 8;
        map[6] = 9;
        //map[5] = 5;
        map[1] = 1;
        map[0] = 0;
        
        /*
        double pointer to traverse
        */
        /* 
        no linked list!!! Why do you want to use double pointer?!!!
        it's array of chars!!! We could use index!!!
        int fast = 0;
        int slow = 0;
        int len = num.length();
        while(fast + 2 < len) {
            slow++;
            fast += 2;
        }
        */
        int len = num.length();
        int i = 0;
        int j = len - 1;
        while(i <= j) {
            int ni = num.charAt(i) - '0';
            int nj = num.charAt(j) - '0';
            if(map[ni] != nj) {
                return false;
            }
            i++;
            j--;
        }
        return true;
        
    }
}

/*
Input:
"11"
Tile Limit Exceeds

Input:
"2"
Output:
true
Expected:
false

Input:
"5"
Output:
true
Expected:
false
*/

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
        if(root == null || p == null || q == null) {
            return null;
        }
        
        int valP = p.val;
        int valQ = q.val;
        return lowestCommonAncestor(root, valP, valQ);
        
    }
    
    public TreeNode lowestCommonAncestor(TreeNode node, int valP, int valQ) {
        int val = node.val;
        if(valP < val) {
            if(valQ < val) {
                return lowestCommonAncestor(node.left, valP, valQ);
            } else {
                return node;
            }
        }
        else if(valP > val) {
            if(valQ > val) {
                return lowestCommonAncestor(node.right, valP, valQ);
            } else {
                return node;
            }
        }
        return node;
    }
}

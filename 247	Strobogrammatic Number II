public class Solution {
    public List<String> findStrobogrammatic(int n) {
        char[] singles = {'0', '1', '8'};
        char[] pair = {'6', '9'};
        
        char[] chars = new char[n];
        List<String> result = new ArrayList<String>();
        buildStrings(chars, singles, pair, result, 0, n-1);
        return result;
    }
    
    private void buildStrings(char[] chars, char[] singles, char[] pair, List<String> result, int left, int right) {
        if(left == right) {
            for(char c:singles) {
                chars[left] = c;
                String s = new String(chars);
                result.add(s);
            }
        } else if(left > right) {
            String s = new String(chars);
            result.add(s);
        } else {
            // left < right
            int i = 0;
            if(left == 0)    i = 1;
            for(; i < singles.length; i++) {
                chars[left] = singles[i];
                chars[right] = singles[i];
                buildStrings(chars, singles, pair, result, left + 1, right - 1);
            } 
            for( i = 0; i < 2; i++) {
                chars[left] = pair[i];
                chars[right] = pair[1-i];
                buildStrings(chars, singles, pair, result, left + 1, right - 1);
            }
        }
        
        
    }
}

/*
Submission Result: Wrong Answer More Details 

Input:
2
Output:
["00","11","88","69","96"]
Expected:
["11","69","88","96"]
*/
